import os
import pandas as pd
import numpy as np
from gep2.stockdata import *
from gep2.tools import *
import matplotlib.pyplot as plt   
import matplotlib.dates as mdates
import mplfinance as mpf


def PeriodProfit2(ary):
    alldates = sorted(set(np.concatenate([list(d.keys()) for d in ary]))) # 找出當期有交易的時間並排序
    sumprofit2 = dict()
    for date in alldates:
        current_info = [d.get(date,0) for d in ary] # 當天買賣情況
        current_date_profit = sum([profit[3] for profit in current_info if isinstance(profit, list) and profit[3] != 0]) # 如果當天有買賣且有損益的話
        if current_date_profit != 0:
            sumprofit2[date] = current_date_profit
    return sumprofit2
'''
#d1=[{}, {}, {'2016-05-17': [231.8, 'buy', 3, 0], '2016-07-13': [309.71, 'stop profit stop loss', 3, 228627.65475000002], '2016-07-14': [303.87, 'buy', 3, 0], '2016-11-14': [271.17, 'time up sell all', 3, -102998.82599999994]}, {'2016-05-17': [192.42, 'buy', 5, 0], '2016-11-14': [151.43, 'time up sell all', 5, -209671.38124999998]}, {'2016-10-07': [237.68, 'buy', 5, 0], '2016-11-14': [201.12, 'time up sell all', 5, -188943.24999999997]}, {'2016-11-16': [435.87, 'buy', 4, 0], '2017-05-15': [403.82, 'time up sell all', 4, -137832.0730000001]}, {}, {}, {'2016-11-16': [152.18, 'buy', 4, 0], '2016-12-12': [168.08, 'stop profit stop loss', 4, 59757.55799999996], '2016-12-13': [164.3, 'buy', 4, 0], '2016-12-30': [178.68, 'stop profit stop loss', 4, 53420.85400000005], '2017-01-03': [177.17, 'buy', 4, 0], '2017-05-15': [187.01, 'time up sell all', 4, 35040.054000000004]}, {'2016-11-16': [202.73, 'buy', 5, 0], '2017-05-15': [155.95, 'time up sell all', 5, -238794.84500000006]}, {'2017-05-17': [408.63, 'buy', 4, 0], '2017-07-28': [501.58, 'stop profit stop loss', 4, 360592.8430000001]}, {}, {'2017-05-17': [181.83, 'buy', 5, 0], '2017-06-15': [205.31, 'stop profit stop loss', 5, 111561.97750000007], '2017-09-13': [195.7, 'buy', 5, 0], '2017-11-14': [143.07, 'time up sell all', 5, -267709.78625]}, {}, {'2017-05-17': [157.02, 'buy', 5, 0], '2017-05-25': [158, 'sell', 4, 2756.125212073908], '2017-11-14': [139.69, 'time up sell all', 1, -18171.88175]}, {}, {}, {'2017-11-16': [141.25, 'buy', 5, 0], '2018-02-23': [165.75, 'stop profit stop loss', 5, 117826.37499999997], '2018-02-26': [164.54, 'buy', 2, 0], '2018-05-15': [117.06, 'time up sell all', 2, -96464.91999999998]}, {'2017-11-16': [173.33, 'buy', 5, 0], '2018-01-03': [178.01, 'stop profit stop loss', 5, 18226.55249999996], '2018-01-04': [177.15, 'buy', 5, 0], '2018-01-12': [187.57, 'stop profit stop loss', 5, 46687.820000000065]}, {'2018-02-05': [116.41, 'buy', 5, 0], '2018-05-15': [97.56, 'time up sell all', 5, -97237.93624999998]}, {'2018-05-17': [526.24, 'buy', 2, 0], '2018-11-14': [256.54, 'time up sell all', 2, -543170.163]}, {'2018-05-17': [669.45, 'buy', 2, 0], '2018-11-14': [718.17, 'time up sell all', 2, 89176.26300000004]}, {'2018-08-23': [135.3, 'buy', 5, 0], '2018-09-07': [147.6, 'stop profit stop loss', 5, 57270.33750000002], '2018-09-10': [140.96, 'buy', 5, 0], '2018-09-14': [158.6, 'stop profit stop loss', 5, 83686.63499999995], '2018-10-12': [129.47, 'buy', 5, 0], '2018-10-22': [136.59, 'stop profit stop loss', 5, 31655.472500000033]}, {'2018-05-17': [241.41, 'buy', 5, 0], '2018-11-14': [168.75, 'time up sell all', 5, -368753.64]}, {'2018-05-17': [97.67, 'buy', 5, 0], '2018-08-08': [104.14, 'stop profit stop loss', 5, 29350.003750000033], '2018-08-14': [101.08, 'buy', 2, 0], '2018-11-14': [84.84, 'time up sell all', 2, -33518.91200000001]}, {'2018-11-16': [259.35, 'buy', 2, 0], '2018-11-29': [289.1, 'stop profit stop loss', 2, 56202.31749999995], '2018-11-30': [286.29, 'buy', 2, 0], '2018-12-04': [321.66, 'stop profit stop loss', 2, 67077.38249999995], '2018-12-06': [300.89, 'buy', 2, 0], '2019-02-27': [336.26, 'stop profit stop loss', 2, 66906.5625]}, {'2018-11-19': [681.92, 'buy', 1, 0], '2018-11-23': [711.33, 'stop profit stop loss', 1, 25290.628750000033], '2018-12-03': [714.06, 'buy', 1, 0], '2018-12-28': [726.37, 'stop profit stop loss', 1, 8078.277250000043]}, {'2018-12-03': [148.24, 'buy', 5, 0], '2019-03-18': [183.2, 'stop profit stop loss', 5, 169690.49], '2019-03-19': [178.35, 'buy', 5, 0], '2019-04-08': [233.7, 'stop profit stop loss', 5, 270308.64375000005]}, {'2018-11-16': [167.31, 'buy', 2, 0], '2019-01-24': [198.42, 'stop profit stop loss', 2, 59987.1495], '2019-04-15': [212.22, 'buy', 2, 0], '2019-05-15': [240.04, 'time up sell all', 2, 52910.81900000002]}, {}, {'2019-06-21': [261.59, 'buy', 5, 0], '2019-11-14': [258.67, 'time up sell all', 5, -22186.902499999705]}, {'2019-05-17': [837.18, 'buy', 2, 0], '2019-11-14': [1056.24, 'time up sell all', 2, 426386.3130000001]}, {'2019-05-21': [209.1, 'buy', 5, 0], '2019-11-14': [168.58, 'time up sell all', 5, -207819.67000000004]}, {'2019-05-17': [240.04, 'buy', 5, 0], '2019-07-17': [282.92, 'stop profit stop loss', 5, 206430.11]}, {'2019-05-31': [100.02, 'buy', 5, 0], '2019-06-17': [101, 'sell', 2, 1406.270133963204], '2019-06-26': [103, 'sell', 2, 5857.948665374774], '2019-07-31': [132.97, 'stop profit stop loss', 1, 32219.079249999995], '2019-08-01': [128.26, 'buy', 5, 0], '2019-08-21': [179.44, 'stop profit stop loss', 5, 251016.0375000001], '2019-08-22': [183.76, 'buy', 5, 0], '2019-09-05': [167, 'sell', 2, -34077.71119410894], '2019-09-06': [163, 'sell', 2, -42672.42455308407], '2019-11-14': [145.53, 'time up sell all', 1, -39135.82824999999]}, {'2019-11-19': [287.02, 'buy', 4, 0], '2019-12-12': [305.54, 'stop profit stop loss', 4, 67035.92800000007], '2020-03-16': [211.22, 'buy', 4, 0], '2020-05-04': [221.05, 'stop profit stop loss', 4, 34203.46100000001]}, {}, {'2019-11-18': [179.7, 'buy', 5, 0], '2020-05-15': [104.33, 'time up sell all', 5, -380438.66374999995]}, {'2019-11-18': [288.32, 'buy', 5, 0], '2019-11-22': [286, 'sell', 1, -3983.137273280474], '2019-11-25': [287, 'sell', 1, -2870.8414970041486], '2019-11-26': [286, 'sell', 1, -3983.137273280474], '2019-11-27': [286, 'sell', 1, -3983.137273280474], '2020-05-15': [258.17, 'time up sell all', 1, -31703.258249999984]}, {'2019-11-18': [150.46, 'buy', 5, 0], '2020-05-15': [104.33, 'time up sell all', 5, -234030.32875000004]}, {'2020-05-19': [214.11, 'buy', 5, 0], '2020-06-08': [254.62, 'stop profit stop loss', 5, 195390.99875]}, {}, {'2020-05-19': [106.62, 'buy', 2, 0], '2020-05-21': [114.21, 'stop profit stop loss', 2, 13865.374500000005], '2020-05-25': [111.74, 'buy', 2, 0], '2020-05-26': [125.51, 'stop profit stop loss', 2, 26110.777499999997], '2020-05-29': [120.21, 'buy', 2, 0], '2020-06-04': [124, 'sell', 1, 4045.9284511112637], '2020-11-13': [107.65, 'time up sell all', 1, -13207.650500000003]}, {'2020-05-19': [258.17, 'buy', 4, 0], '2020-11-13': [257.49, 'time up sell all', 4, -8749.142000000109]}, {'2020-06-05': [126.41, 'buy', 5, 0], '2020-11-13': [111.93, 'time up sell all', 5, -75777.12249999997]}, {'2020-11-17': [305.59, 'buy', 5, 0], '2021-05-14': [247.57, 'time up sell all', 5, -297754.81499999994]}, {'2020-11-17': [1516.58, 'buy', 1, 0], '2021-01-15': [2065.16, 'stop profit stop loss', 1, 537280.5404999997]}, {'2020-11-17': [108.22, 'buy', 5, 0], '2020-11-24': [111, 'sell', 2, 6009.713867593498], '2020-11-25': [113, 'sell', 2, 9071.681439656619], '2020-11-30': [115.14, 'stop profit stop loss', 1, 6256.292000000001], '2020-12-16': [108.22, 'buy', 5, 0], '2020-12-17': [109, 'sell', 2, 2182.2544025146344], '2020-12-25': [110, 'sell', 2, 3330.492242038221], '2021-05-11': [117.26, 'stop profit stop loss', 1, 8366.910999999993], '2021-05-13': [98.61, 'buy', 5, 0], '2021-05-14': [92.27, 'time up sell all', 5, -34444.06999999999]}, {'2020-12-17': [250.27, 'buy', 5, 0], '2021-04-09': [255, 'sell', 4, 13330.06653121463], '2021-05-14': [228.24, 'time up sell all', 1, -23396.596749999997]}, {'2020-11-17': [112.58, 'buy', 5, 0], '2021-05-14': [91.27, 'time up sell all', 5, -109371.48125]}]
d1=[{'2016-08-15': [884.11, 'buy', 2, 0], '2016-11-14': [763.55, 'time up sell all', 2, -250397.13100000005]}, {}, {'2016-05-17': [455.47, 'buy', 4, 0], '2016-09-02': [560.67, 'stop profit stop loss', 4, 408279.96200000006]}, {'2016-05-17': [195.4, 'buy', 5, 0], '2016-07-25': [260.54, 'stop profit stop loss', 5, 318543.32750000013], '2016-11-04': [240.66, 'buy', 5, 0], '2016-11-14': [203.98, 'time up sell all', 5, -189627.75999999998]}, {}, {'2016-11-16': [496.09, 'buy', 2, 0], '2016-12-16': [567.11, 'stop profit stop loss', 2, 135607.21999999997], '2016-12-29': [548.81, 'buy', 2, 0], '2017-04-27': [624.14, 'stop profit stop loss', 2, 143572.25249999994]}, {'2016-11-16': [63.66, 'buy', 5, 0], '2016-12-09': [73.01, 'stop profit stop loss', 5, 44681.076250000006], '2016-12-13': [68.95, 'buy', 5, 0], '2017-02-03': [81.52, 'stop profit stop loss', 5, 60555.10125000001], '2017-03-30': [93.16, 'buy', 5, 0], '2017-05-15': [96.82, 'time up sell all', 5, 15494.09249999997]}, {'2016-11-16': [366.4, 'buy', 5, 0], '2017-05-15': [287.67, 'time up sell all', 5, -402625.2987500001]}, {'2016-11-16': [94.76, 'buy', 5, 0], '2017-05-15': [77.49, 'time up sell all', 5, -88739.63125000002]}, {'2016-11-16': [190.38, 'buy', 4, 0], '2017-05-15': [192.27, 'time up sell all', 4, 3071.655000000028]}, {'2017-05-24': [967.88, 'buy', 2, 0], '2017-11-14': [1100.25, 'time up sell all', 2, 252244.3295]}, {'2017-05-18': [208.52, 'buy', 5, 0], '2017-07-26': [301.82, 'stop profit stop loss', 5, 458336.52749999997], '2017-11-13': [263.23, 'buy', 5, 0], '2017-11-14': [266.93, 'time up sell all', 5, 10718.66000000009]}, {}, {'2017-05-17': [286.79, 'buy', 4, 0], '2017-11-14': [243.58, 'time up sell all', 4, -178786.0689999999]}, {'2017-05-17': [316.96, 'buy', 4, 0], '2017-10-05': [358.18, 'stop profit stop loss', 4, 156733.5419999999]}, {'2017-11-24': [458.21, 'buy', 4, 0], '2018-05-15': [651.48, 'stop profit stop loss', 4, 758937.007]}, {'2017-12-28': [648.9, 'buy', 3, 0], '2018-05-15': [627.64, 'time up sell all', 3, -74885.96850000008]}, {'2017-11-16': [383.99, 'buy', 5, 0], '2018-05-15': [371.89, 'time up sell all', 5, -71463.995]}, {'2017-11-16': [11.01, 'buy', 5, 0], '2018-05-15': [12.84, 'time up sell all', 5, 8787.468749999998]}, {'2017-12-25': [503.72, 'buy', 3, 0], '2018-05-15': [486.35, 'time up sell all', 3, -60719.69924999995]}, {'2018-07-30': [82.75, 'buy', 5, 0], '2018-11-14': [31.27, 'time up sell all', 5, -258681.44249999998]}, {}, {'2018-06-14': [303.31, 'buy', 5, 0], '2018-11-14': [247.04, 'time up sell all', 5, -288976.8437500001]}, {'2018-06-01': [432.02, 'buy', 4, 0], '2018-11-14': [376.31, 'time up sell all', 4, -231963.20099999988]}, {'2018-05-17': [30.24, 'buy', 5, 0], '2018-05-22': [33.06, 'stop profit stop loss', 5, 13153.087500000001], '2018-05-23': [32.24, 'buy', 5, 0], '2018-11-14': [22.29, 'time up sell all', 5, -50472.87625000003]}, {'2018-11-16': [229.58, 'buy', 4, 0], '2019-05-15': [234.4, 'time up sell all', 4, 13822.513999999966]}, {'2018-12-04': [357.75, 'buy', 5, 0], '2019-03-05': [467.93, 'stop profit stop loss', 5, 537998.0799999998]}, {'2018-12-03': [220.81, 'buy', 4, 0], '2019-02-13': [252.58, 'stop profit stop loss', 4, 121350.71699999995], '2019-02-18': [252.58, 'buy', 4, 0], '2019-04-26': [276.01, 'stop profit stop loss', 4, 87394.91700000002]}, {'2018-11-16': [326.95, 'buy', 5, 0], '2019-05-15': [350.16, 'time up sell all', 5, 105973.19125000009]}, {'2018-11-21': [93.47, 'buy', 3, 0], '2019-01-23': [100.33, 'stop profit stop loss', 3, 18848.535000000003], '2019-01-24': [100.68, 'buy', 3, 0], '2019-05-15': [88.94, 'time up sell all', 3, -36831.0855]}, {'2019-05-17': [159.45, 'buy', 5, 0], '2019-07-03': [174.39, 'stop profit stop loss', 5, 69705.54000000004], '2019-07-04': [172.39, 'buy', 5, 0], '2019-10-22': [192.69, 'stop profit stop loss', 5, 96008.45499999996]}, {'2019-05-17': [252.68, 'buy', 5, 0], '2019-09-19': [361.65, 'stop profit stop loss', 5, 535048.1487499999]}, {'2019-05-21': [321.89, 'buy', 5, 0], '2019-11-14': [392.3, 'time up sell all', 5, 341076.89625]}, {'2019-05-22': [99.14, 'buy', 5, 0], '2019-09-19': [120.61, 'stop profit stop loss', 5, 103975.13124999998]}, {'2019-05-21': [238.19, 'buy', 3, 0], '2019-06-21': [260.13, 'stop profit stop loss', 3, 61348.51199999996], '2019-06-24': [261.18, 'buy', 3, 0], '2019-07-11': [282.49, 'stop profit stop loss', 3, 59063.40074999991], '2019-07-19': [260.76, 'buy', 3, 0], '2019-11-14': [268.37, 'time up sell all', 3, 18152.639250000066]}, {'2019-12-31': [255.58, 'buy', 5, 0], '2020-05-15': [191.28, 'time up sell all', 5, -327553.0775000001]}, {'2020-02-04': [511.12, 'buy', 4, 0], '2020-05-15': [487.23, 'time up sell all', 4, -107097.35499999998]}, {'2020-03-25': [478.65, 'buy', 5, 0], '2020-05-08': [660.08, 'stop profit stop loss', 5, 889135.3487500001]}, {'2020-03-20': [457.71, 'buy', 5, 0], '2020-05-15': [527.65, 'time up sell all', 5, 334764.56000000006]}, {'2020-03-16': [455.96, 'buy', 5, 0], '2020-05-15': [533.96, 'time up sell all', 5, 374937.42]}, {}, {'2020-05-19': [472.9, 'buy', 5, 0], '2020-07-07': [663.97, 'stop profit stop loss', 5, 937290.2512499999]}, {'2020-05-19': [535.58, 'buy', 4, 0], '2020-07-06': [720.45, 'stop profit stop loss', 4, 723675.2289999998]}, {'2020-06-08': [946.2, 'buy', 2, 0], '2020-07-28': [1442.12, 'stop profit stop loss', 2, 976380.568]}, {'2020-06-11': [275.56, 'buy', 5, 0], '2020-11-13': [253.63, 'time up sell all', 5, -117224.92874999996]}, {'2020-11-17': [647.07, 'buy', 3, 0], '2021-01-12': [881.98, 'stop profit stop loss', 3, 690255.4912499998]}, {'2020-11-17': [727.76, 'buy', 3, 0], '2021-01-14': [989.36, 'stop profit stop loss', 3, 768555.0719999999]}, {'2020-11-17': [203.76, 'buy', 5, 0], '2020-12-10': [264.2, 'stop profit stop loss', 5, 294902.78500000003], '2020-12-11': [262.67, 'buy', 5, 0], '2021-02-24': [323.37, 'stop profit stop loss', 5, 294473.915], '2021-03-10': [276.44, 'buy', 5, 0], '2021-05-14': [224.42, 'time up sell all', 5, -267034.92750000005]}, {}, {}]
aa = pd.DataFrame.from_dict(PeriodProfit2(d1), orient="index")'''


stock = 3406
df = pd.read_csv('gep2/stockdata/{}.csv'.format(stock), index_col = 0, parse_dates=True)
df = df.truncate(before = '2017-08-15', after = '2018-11-14')
df.columns = ['Open', 'Close', 'Low', 'High', 'Volume']

train_detail = pd.read_excel('gep2/exceldata/RF動態/RF/new/1/detail_trade_history/period_5/train/{}.xlsx'.format(stock),
                             index_col=0,
                             parse_dates=True)

# test data
test_detail = pd.read_excel('gep2/exceldata/RF動態/RF/new/1/detail_trade_history/period_5/test/{}.xlsx'.format(stock),
                            index_col=0,
                            parse_dates=True)
'''
# train data2018-05-16
train_detail = pd.read_excel('gep2/record/RF/23_size40_iter40/detail_trade_history/period_5/train/{}.xlsx'.format(stock),
                             index_col=0,
                             parse_dates=True)

# test data
test_detail = pd.read_excel('gep2/record/RF/23_size40_iter40/detail_trade_history/period_5/test/{}.xlsx'.format(stock),
                            index_col=0,
                            parse_dates=True)'''

trade_detail = pd.concat([train_detail, test_detail], axis=0)
df = df.merge(trade_detail, how='outer', left_index=True, right_index=True)
df.index.name = 'Date'
df['buysignal'] = np.where(df.action == 'buy', df.Low*0.95, np.NaN)
df['sellsignal'] = np.where((df.action=='sell') |
                            (df.action=='stop profit stop loss') |
                            (df.action=='time up sell all'), 
                             df.High*1.05, np.NaN)
df['state'] = np.where(df.buysignal != np.NaN, 1, 0)
df['MCOverrides'] = np.where(df.Close > df.Open, 'red', 'green')

split_time = '2018-05-16'
df['trainTime'] = np.where(df.index < split_time, ((df.High+df.Low)/2), np.NaN)
df['testTime'] = np.where(df.index >= split_time, ((df.High+df.Low)/2), np.NaN)



apds = [mpf.make_addplot(df.buysignal, type='scatter',markersize=200, marker='^', alpha=0.8, ylabel='buy'),
        mpf.make_addplot(df.sellsignal, type='scatter',markersize=200, marker='v', alpha=0.8),
        mpf.make_addplot(df.trainTime, type='line', color='g', width=30, alpha=0.1),
        mpf.make_addplot(df.testTime, type='line', color='b', width=30, alpha=0.1)]



#fig = mpf.figure(figsize=(8,8),style='yahoo')
#ax = fig.add_axes([0.05,0.75,0.5,0.25])

mpf.plot(df, figratio=(50,20), style='yahoo', title='\n\n{}.TW'.format(stock),
         type='candle', marketcolor_overrides=df.MCOverrides.values,
         addplot=apds, savefig='testsave.png')


#markname = np.where(df.action == 'buy', 'buy', np.NaN)
#ax.annotate('test', ('2018-05-27', 340))
#for i in range(len(df)):
    #ax.annotate('test', (df.index, df.Close))
#mpf.show()












# 6150 2723

